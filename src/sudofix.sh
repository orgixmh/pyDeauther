#!/usr/bin/env bash
# sudofix.sh
# Create/remove a sudoers drop-in to allow passwordless airodump-ng (and iw, ip).
# Usage:
#   sudo ./sudofix.sh -u <username> [--remove]
# Examples:
#   sudo ./sudofix.sh -u $USER
#   sudo ./sudofix.sh -u $USER --remove

set -euo pipefail

RED=$'\e[31m'; GRN=$'\e[32m'; YLW=$'\e[33m'; BLU=$'\e[34m'; RST=$'\e[0m'

die() { echo "${RED}Error:${RST} $*" >&2; exit 1; }
info() { echo "${BLU}info:${RST} $*"; }
ok() { echo "${GRN}ok:${RST} $*"; }
warn() { echo "${YLW}warn:${RST} $*"; }

SUDOERS_FILE="/etc/sudoers.d/aircrack"
VISUDO_BIN="$(command -v visudo || true)"

USER_NAME=""
INCLUDE_AIRMON=0
REMOVE=0

# --- parse args ---
while [[ $# -gt 0 ]]; do
  case "$1" in
    -u|--user) USER_NAME="${2:-}"; shift 2 ;;
    --include-airmon) INCLUDE_AIRMON=1; shift ;;
    --remove) REMOVE=1; shift ;;
    -h|--help)
      sed -n '2,30p' "$0"; exit 0 ;;
    *)
      die "Unknown argument: $1"
  esac
done

[[ -n "$USER_NAME" ]] || die "Please specify -u <username>"

# must be root
[[ $EUID -eq 0 ]] || die "Run this script with sudo or as root"

[[ -n "$VISUDO_BIN" ]] || die "visudo not found"

# --- resolve command paths ---
need_bins=( airodump-ng iw ip aireplay-ng timeout airmon-ng iwconfig ifconfig)

declare -A paths
missing=()
for b in "${need_bins[@]}"; do
  p="$(command -v "$b" || true)"
  if [[ -z "$p" ]]; then
    missing+=("$b")
  else
    paths["$b"]="$p"
  fi
done

if (( ${#missing[@]} > 0 )); then
  warn "These commands were not found in PATH: ${missing[*]}"
  warn "They will be skipped. Install them or adjust PATH if needed."
fi

if (( ${#paths[@]} == 0 )); then
  die "No commands resolved—nothing to whitelist."
fi

# Build Cmnd_Alias line with absolute paths
CMDS_LIST=$(printf "%s, " "${paths[@]}")
CMDS_LIST="${CMDS_LIST%, }"  # trim last comma+space

# --- remove mode ---
if (( REMOVE )); then
  if [[ -f "$SUDOERS_FILE" ]]; then
    info "Removing $SUDOERS_FILE"
    rm -f "$SUDOERS_FILE"
    "$VISUDO_BIN" -c && ok "sudoers syntax OK" || die "sudoers syntax check failed!"
    ok "Removed. Cached sudo auth (if any) will be dropped."
    sudo -k || true
  else
    warn "$SUDOERS_FILE not present—nothing to do."
  fi
  exit 0
fi

# --- write drop-in safely via temp + visudo check ---
TMP="$(mktemp)"
cat > "$TMP" <<EOF
# Auto-generated by setup-aircrack-sudoers.sh
# Allows selected aircrack/iface tools to run without password for user $USER_NAME
User_Alias AIRUSER = $USER_NAME
Cmnd_Alias AIRCMDS = $CMDS_LIST
AIRUSER ALL=(root) NOPASSWD: AIRCMDS
EOF

info "Proposed sudoers entry:"
echo "--------------------------------"
cat "$TMP"
echo "--------------------------------"

# Validate temp content
"$VISUDO_BIN" -c -f "$TMP" >/dev/null 2>&1 || {
  cat "$TMP" >&2
  rm -f "$TMP"
  die "visudo validation failed for the generated file"
}

# Install
install -m 0440 "$TMP" "$SUDOERS_FILE"
rm -f "$TMP"
ok "Installed $SUDOERS_FILE"

# Global syntax check
"$VISUDO_BIN" -c >/dev/null && ok "sudoers syntax OK" || die "sudoers syntax check failed!"

# Test airodump-ng path if present
if [[ -n "${paths[airodump-ng]:-}" ]]; then
  info "Testing passwordless airodump-ng (no prompt expected):"
  sudo -k  # drop any cached creds to be sure
  if sudo -n "${paths[airodump-ng]}" --help >/dev/null 2>&1; then
    ok "airodump-ng is passwordless via sudo"
  else
    warn "Test failed. Check that the path matches exactly: ${paths[airodump-ng]}"
  fi
fi

ok "Done. Your app can call: sudo -n <absolute-path> ..."
